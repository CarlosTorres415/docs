(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{129:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,d=u["".concat(c,".").concat(m)]||u[m]||b[m]||i;return n?a.a.createElement(d,o(o({ref:t},l),{},{components:n})):a.a.createElement(d,o({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,c=new Array(i);c[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,c[1]=o;for(var l=2;l<i;l++)c[l]=n[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},66:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),i=(n(0),n(129)),c=["components"],o={title:"quick start"},s={unversionedId:"flashbots-data/mev-inspect-rs/inspect-quick-start",id:"flashbots-data/mev-inspect-rs/inspect-quick-start",isDocsHomePage:!1,title:"quick start",description:"This quickstart guide contains all the information necessary to get you up and running using mev-inspect-rs. If you have any questions, do not hesitate to ask in our Discord.",source:"@site/docs/flashbots-data/mev-inspect-rs/inspect-quick-start.md",slug:"/flashbots-data/mev-inspect-rs/inspect-quick-start",permalink:"/flashbots-data/mev-inspect-rs/inspect-quick-start",version:"current",sidebar:"docs",previous:{title:"flashbots dashboard",permalink:"/flashbots-data/dashboard"},next:{title:"codebase - design",permalink:"/flashbots-data/mev-inspect-rs/inspect-codebase-design"}},l=[{value:"requirements:",id:"requirements",children:[]},{value:"instructions:",id:"instructions",children:[]}],p={toc:l};function u(e){var t=e.components,n=Object(a.a)(e,c);return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This quickstart guide contains all the information necessary to get you up and running using ",Object(i.b)("a",{parentName:"p",href:"https://github.com/flashbots/mev-inspect-rs"},"mev-inspect-rs"),". If you have any questions, do not hesitate to ask in our ",Object(i.b)("a",{parentName:"p",href:"https://discord.gg/GezzK33W"},"Discord"),"."),Object(i.b)("h3",{id:"requirements"},"requirements:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"Rust and Cargo, installation instructions ",Object(i.b)("a",{parentName:"li",href:"https://doc.rust-lang.org/cargo/getting-started/installation.html"},"here")),Object(i.b)("li",{parentName:"ul"},"OpenEthereum node running in archive mode with tracing enabled:",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"openethereum --pruning archive --tracing on")),Object(i.b)("li",{parentName:"ul"},"If you are interested in contributing to mev-inspect but do not have access to an archive node, please reach out to us in our discord."))),Object(i.b)("li",{parentName:"ul"},"Postgres instance running locally",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Using docker: ",Object(i.b)("inlineCode",{parentName:"li"},"docker run --name postgres -e POSTGRES_PASSWORD=postgres -p 127.0.0.1:5432:5432 -d postgres"))))),Object(i.b)("h3",{id:"instructions"},"instructions:"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Fetch the repository: ",Object(i.b)("inlineCode",{parentName:"p"},"git clone https://github.com/flashbots/mev-inspect-rs.git"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Build: ",Object(i.b)("inlineCode",{parentName:"p"},"cd mev-inspect-rs/ && cargo build --release"))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Run:"),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"To inspect a single tx, run ",Object(i.b)("inlineCode",{parentName:"p"},"./target/release/mev-inspect --db-cfg postgresql://postgres:postgres@localhost -u <link_to_archive_node> tx 0x5243f353cf41f8394ba480e3c15fb57881a5d8ec985874520a1b322ecf2519f4")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},'Note that the above command assumes postgres username + password to be "postgres", change credentials accordingly.')),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Sample output:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre"},"  Found: 0x5243f353cf41f8394ba480e3c15fb57881a5d8ec985874520a1b322ecf2519f4\n  Revenue: 3137921082854343002 WEI\n  Cost: 95196411000000000 WEI\n  Actions: {Liquidation}\n  Protocols: {Aave}\n  Status: Success\n"))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Similarly, to inspect all transactions in an entire range of blocks, use: ",Object(i.b)("inlineCode",{parentName:"p"},"./target/release/mev-inspect --db-cfg postgresql://postgres:postgres@localhost -u <link_to_archive_node> blocks -f 12472860 -t 12472867")),Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},"Blocks are inspected in parallel for efficiency"))))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("p",{parentName:"li"},"Test: ",Object(i.b)("inlineCode",{parentName:"p"},"cargo test")))))}u.isMDXComponent=!0}}]);