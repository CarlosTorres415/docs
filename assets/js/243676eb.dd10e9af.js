(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{129:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return f}));var r=t(0),o=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=o.a.createContext({}),u=function(e){var n=o.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},b=function(e){var n=u(e.components);return o.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},p=o.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),b=u(t),p=r,f=b["".concat(s,".").concat(p)]||b[p]||d[p]||a;return t?o.a.createElement(f,i(i({ref:n},c),{},{components:t})):o.a.createElement(f,i({ref:n},c))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,s=new Array(a);s[0]=p;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<a;c++)s[c]=t[c];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},79:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return b}));var r=t(3),o=t(7),a=(t(0),t(129)),s=["components"],i={title:"goerli testnet"},l={unversionedId:"flashbots-auction/searchers/advanced/goerli-testnet",id:"flashbots-auction/searchers/advanced/goerli-testnet",isDocsHomePage:!1,title:"goerli testnet",description:"Flashbots operates a Goerli validator and searchers can test Flashbots by using it. Here's how to setup the Flashbots Bundle Provider in Ethers to use Goerli:",source:"@site/docs/flashbots-auction/searchers/advanced/goerli-testnet.mdx",slug:"/flashbots-auction/searchers/advanced/goerli-testnet",permalink:"/flashbots-auction/searchers/advanced/goerli-testnet",version:"current",sidebar:"docs",previous:{title:"searcher reputation",permalink:"/flashbots-auction/searchers/advanced/reputation"},next:{title:"eip-1559 support",permalink:"/flashbots-auction/searchers/advanced/eip1559"}},c=[],u={toc:c};function b(e){var n=e.components,t=Object(o.a)(e,s);return Object(a.b)("wrapper",Object(r.a)({},u,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Flashbots operates a Goerli validator and searchers can test Flashbots by using it. Here's how to setup the Flashbots Bundle Provider in Ethers to use Goerli:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'const provider = new ethers.getDefaultProvider("goerli");\n\nconst authSigner = new ethers.Wallet(\n  \'0x2000000000000000000000000000000000000000000000000000000000000000\'\n  provider\n);\n  \nconst flashbotsProvider = await flashbots.FlashbotsBundleProvider.create(\n  provider,\n  authSigner,\n  "https://relay-goerli.flashbots.net",\n  "goerli"\n);\n')),Object(a.b)("p",null,"Sending bundles works the same as sending bundles on the mainnet. For example this will simulate a bundle and if it is successful then send a batch of 10:"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-js"},'const signedTransactions = await flashbotsProvider.signBundle([\n    {\n      signer: authSigner,\n      transaction: {\n        to: "0xf1a54b075fb71768ac31b33fd7c61ad8f9f7dd18",\n        gasPrice: 10,\n        gasLimit: 33000,\n        chainId: 5,\n        value: 0,\n      },\n    },\n  ]);\n\n  const blockNumber = await provider.getBlockNumber();\n\n  console.log(new Date());\n  const simulation = await flashbotsProvider.simulate(\n    signedTransactions,\n    blockNumber + 1\n  );\n  console.log(new Date());\n\n  // Using TypeScript discrimination\n  if ("error" in simulation) {\n    console.log(`Simulation Error: ${simulation.error.message}`);\n  } else {\n    console.log(\n      `Simulation Success: ${blockNumber} ${JSON.stringify(\n        simulation,\n        null,\n        2\n      )}`\n    );\n  }\n  console.log(signedTransactions);\n\n  for (var i = 1; i <= 10; i++) {\n    const bundleSubmission = flashbotsProvider.sendRawBundle(\n      signedTransactions,\n      blockNumber + i\n    );\n    console.log("submitted for block # ", blockNumber + i);\n  }\n  console.log("bundles submitted");\n')),Object(a.b)("p",null,"The reason why we submit bundles for the next 10 blocks is because Flashbots only runs a small portion of the validators on Goerli. We are more likely to have a bundle included if we submit bundles for several blocks into the future."))}b.isMDXComponent=!0}}]);