"use strict";(self.webpackChunkflashbot_docs=self.webpackChunkflashbot_docs||[]).push([[4194],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=l(n),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4414:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return c},metadata:function(){return l},toc:function(){return p},default:function(){return m}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={title:"quick start"},c=void 0,l={unversionedId:"flashbots-data/deprecated/mev-inspect-rs/inspect-quick-start",id:"flashbots-data/deprecated/mev-inspect-rs/inspect-quick-start",isDocsHomePage:!1,title:"quick start",description:"This quickstart guide contains all the information necessary to get you up and running using mev-inspect-rs. If you have any questions, do not hesitate to ask in our Discord.",source:"@site/docs/flashbots-data/deprecated/mev-inspect-rs/inspect-quick-start.md",sourceDirName:"flashbots-data/deprecated/mev-inspect-rs",slug:"/flashbots-data/deprecated/mev-inspect-rs/inspect-quick-start",permalink:"/flashbots-data/deprecated/mev-inspect-rs/inspect-quick-start",tags:[],version:"current",frontMatter:{title:"quick start"}},p=[{value:"requirements:",id:"requirements",children:[]},{value:"instructions:",id:"instructions",children:[]}],u={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This quickstart guide contains all the information necessary to get you up and running using ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/flashbots/mev-inspect-rs"},"mev-inspect-rs"),". If you have any questions, do not hesitate to ask in our ",(0,i.kt)("a",{parentName:"p",href:"https://discord.gg/GezzK33W"},"Discord"),"."),(0,i.kt)("h3",{id:"requirements"},"requirements:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Rust and Cargo, installation instructions ",(0,i.kt)("a",{parentName:"li",href:"https://doc.rust-lang.org/cargo/getting-started/installation.html"},"here")),(0,i.kt)("li",{parentName:"ul"},"OpenEthereum node running in archive mode with tracing enabled:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"openethereum --pruning archive --tracing on")),(0,i.kt)("li",{parentName:"ul"},"If you are interested in contributing to mev-inspect but do not have access to an archive node, please reach out to us in our discord."))),(0,i.kt)("li",{parentName:"ul"},"Postgres instance running locally",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Using docker: ",(0,i.kt)("inlineCode",{parentName:"li"},"docker run --name postgres -e POSTGRES_PASSWORD=postgres -p 127.0.0.1:5432:5432 -d postgres"))))),(0,i.kt)("h3",{id:"instructions"},"instructions:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Fetch the repository: ",(0,i.kt)("inlineCode",{parentName:"p"},"git clone https://github.com/flashbots/mev-inspect-rs.git"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Build: ",(0,i.kt)("inlineCode",{parentName:"p"},"cd mev-inspect-rs/ && cargo build --release"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"To inspect a single tx, run ",(0,i.kt)("inlineCode",{parentName:"p"},"./target/release/mev-inspect --db-cfg postgresql://postgres:postgres@localhost -u <link_to_archive_node> tx 0x5243f353cf41f8394ba480e3c15fb57881a5d8ec985874520a1b322ecf2519f4")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'Note that the above command assumes postgres username + password to be "postgres", change credentials accordingly.')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Sample output:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"  Found: 0x5243f353cf41f8394ba480e3c15fb57881a5d8ec985874520a1b322ecf2519f4\n  Revenue: 3137921082854343002 WEI\n  Cost: 95196411000000000 WEI\n  Actions: {Liquidation}\n  Protocols: {Aave}\n  Status: Success\n"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Similarly, to inspect all transactions in an entire range of blocks, use: ",(0,i.kt)("inlineCode",{parentName:"p"},"./target/release/mev-inspect --db-cfg postgresql://postgres:postgres@localhost -u <link_to_archive_node> blocks -f 12472860 -t 12472867")),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Blocks are inspected in parallel for efficiency"))))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Test: ",(0,i.kt)("inlineCode",{parentName:"p"},"cargo test")))))}m.isMDXComponent=!0}}]);